{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"SCHISM-ESMF The Earth System Modeling Framework (ESMF) and National Unified Operational Prediction Capability (NUOPC) caps for SCHISM. Three steps The cap is meant to be used in the context of ESMF-based coupling frameworks, which come in two flavors, either based on ESMF or on its NUOPC extension. We also provide some standalone example applications which you can use to base your own implementation on Install the prerequisites following Installation Build the cap's ESMF and NUOPC libraries following Installation Include the SCHISM-ESMF cap in your application's build system by linking to -libschism_esmf , see below Coupling frameworks NUOPC The National Unified Operational Prediction Capability (NUOPC) is a consortium of Navy, NOAA, and Air Force modelers and their research partners. It aims to advance the weather prediction modeling systems used by meteorologists, mission planners, and decision makers. NUOPC partners are working toward a common model architecture - a standard way of building models - in order to make it easier to collaboratively build modeling systems. To this end, they have developed the NUOPC Layer that defines conventions and a set of generic components for building coupled models using the Earth System Modeling Framework (ESMF). SCHISM can be such a model component within an NUOPC-coupled system. A so-called \"cap\" wraps SCHISM and exposes it via the NUOPC Application Programming Interface (API). The interfaces exposed through the API are * import of fields * export of fields * control structure NUOPC - CoastalApp The NOAA Environmental Modeling System (NEMS) Coastal Application \"CoastalApp\" is a NUOPC-based coupled system using the NEMS coupler. The NUOPC cap is currently being integrated as an OCN component of the CoastalApp; this is available from a public repository https://github.com/noaa-ocs-modeling/CoastalApp Obtaining and building CoastalApp export COASTALAPP_DIR=/my/path/to/coastalapp git clone https://github.com/noaa-ocs-modeling/CoastalApp $COASTALAPP_DIR cd $COASTALAPP_DIR git checkout feature/schism git submodule update --init --recursive SCHISM NEMS bash ./build.sh -component \"SCHISM\" You can add components like WW3 or ADCIRC , and you may be required to choose a compiler or platform. Consult ./build.sh -h for help and further information. ESMF The Earth System Modeling Framework (ESMF) is a suite of software tools for developing high-performance, multi-component Earth science modeling applications. Such applications may include a few or dozens of components representing atmospheric, oceanic, terrestrial, or other physical domains, and their constituent processes (dynamical, chemical, biological, etc.). Often these components are developed by different groups independently, and must be \u201ccoupled\u201d together using software that transfers and transforms data among the components in order to form functional simulations. SCHISM can be such a component within an ESMF-coupled system. A so-called \"cap\" wraps SCHISM and exposes it via the ESMF Application Programming Interface (API). The interfaces exposed through the API are * import of fields * export of fields * control structure ESMF - MOSSCO MOSSCO, the \"Modular System for Shelves and Coasts\" is a framework for coupling processes or domains that are originally developed in standalone numerical models. The software MOSSCO implements this infrastructure in the form of a library of components and couplers, and of example coupled applications. The components \"wrap\" external models used in coastal and shelf sciences; these wrapped components are then coupled to each other in the Earth System Modeling Framework (ESMF). The SCHISM ESMF cap integrates with MOSSCO. Obtaining and building MOSSCO export SCHISM_BUILD_DIR=/my/path/to/schism/build export SCHISM_ESMF_DIR=/my/path/to/schism-esmf export MOSSCO_DIR=/my/path/to/mossco git clone https://git.code.sf.net/p/mossco/code $MOSSCO_DIR cd $MOSSCO_DIR make all install bash ./build.sh -component \"SCHISM\" Using SCHISM as part of a MOSSCO coupled system A simple preconfigured application is available in $MOSSCO_DIR/examples/esmf/schism . To build it, run make in that directory. You can use the resulting executable as a drop-in replacement for SCHISM's standalone pschism executable, but you need to add the mossco.cfg resource file which overrides param.nml for control parameters of the coupled system, like start and stop time. ESMF - Pre-configured executables While the API exposed through the SCHISM-ESMF library is the core functionality of the cap, there are also several pre-configured simple coupled systems available for you to make or use as a template: concurrent_esmf_test.F90 multi_schism.F90 schism_driver_interfaces.F90 schism_pdaf.F90 triple_schism.F90 Applications (1) The SCHISM ESMF cap is used to couple SCHISM to the Parallel Data Assimilation Framework leveraging the control structures of ESMF, see schism_pdaf.F90 . (2) The SCHISM ESMF cap is used in the Modular System for Shelves and Coasts, see MOSSCO . Within that system, SCHISM can be flexibly coupled to components for the atmosphere, waves, ocean BGC, generic input/output, sediment. Publications Hao-Cheng Yu, Yinglong J. Zhang, Nerger Lars, Carsten Lemmen, Jason C.S Yu, Tzu-Yin Chou, Chi-Hao Chu, and Chuen-Teyr Terng: Development of a flexible data assimilation method in a 3D unstructured-grid ocean model under Earth System Modeling Framework, submitted to Geoscientific Model Development, March 2022","title":"Home"},{"location":"index.html#schism-esmf","text":"The Earth System Modeling Framework (ESMF) and National Unified Operational Prediction Capability (NUOPC) caps for SCHISM.","title":"SCHISM-ESMF"},{"location":"index.html#three-steps","text":"The cap is meant to be used in the context of ESMF-based coupling frameworks, which come in two flavors, either based on ESMF or on its NUOPC extension. We also provide some standalone example applications which you can use to base your own implementation on Install the prerequisites following Installation Build the cap's ESMF and NUOPC libraries following Installation Include the SCHISM-ESMF cap in your application's build system by linking to -libschism_esmf , see below","title":"Three steps"},{"location":"index.html#coupling-frameworks","text":"","title":"Coupling frameworks"},{"location":"index.html#nuopc","text":"The National Unified Operational Prediction Capability (NUOPC) is a consortium of Navy, NOAA, and Air Force modelers and their research partners. It aims to advance the weather prediction modeling systems used by meteorologists, mission planners, and decision makers. NUOPC partners are working toward a common model architecture - a standard way of building models - in order to make it easier to collaboratively build modeling systems. To this end, they have developed the NUOPC Layer that defines conventions and a set of generic components for building coupled models using the Earth System Modeling Framework (ESMF). SCHISM can be such a model component within an NUOPC-coupled system. A so-called \"cap\" wraps SCHISM and exposes it via the NUOPC Application Programming Interface (API). The interfaces exposed through the API are * import of fields * export of fields * control structure","title":"NUOPC"},{"location":"index.html#nuopc-coastalapp","text":"The NOAA Environmental Modeling System (NEMS) Coastal Application \"CoastalApp\" is a NUOPC-based coupled system using the NEMS coupler. The NUOPC cap is currently being integrated as an OCN component of the CoastalApp; this is available from a public repository https://github.com/noaa-ocs-modeling/CoastalApp","title":"NUOPC - CoastalApp"},{"location":"index.html#obtaining-and-building-coastalapp","text":"export COASTALAPP_DIR=/my/path/to/coastalapp git clone https://github.com/noaa-ocs-modeling/CoastalApp $COASTALAPP_DIR cd $COASTALAPP_DIR git checkout feature/schism git submodule update --init --recursive SCHISM NEMS bash ./build.sh -component \"SCHISM\" You can add components like WW3 or ADCIRC , and you may be required to choose a compiler or platform. Consult ./build.sh -h for help and further information.","title":"Obtaining and building CoastalApp"},{"location":"index.html#esmf","text":"The Earth System Modeling Framework (ESMF) is a suite of software tools for developing high-performance, multi-component Earth science modeling applications. Such applications may include a few or dozens of components representing atmospheric, oceanic, terrestrial, or other physical domains, and their constituent processes (dynamical, chemical, biological, etc.). Often these components are developed by different groups independently, and must be \u201ccoupled\u201d together using software that transfers and transforms data among the components in order to form functional simulations. SCHISM can be such a component within an ESMF-coupled system. A so-called \"cap\" wraps SCHISM and exposes it via the ESMF Application Programming Interface (API). The interfaces exposed through the API are * import of fields * export of fields * control structure","title":"ESMF"},{"location":"index.html#esmf-mossco","text":"MOSSCO, the \"Modular System for Shelves and Coasts\" is a framework for coupling processes or domains that are originally developed in standalone numerical models. The software MOSSCO implements this infrastructure in the form of a library of components and couplers, and of example coupled applications. The components \"wrap\" external models used in coastal and shelf sciences; these wrapped components are then coupled to each other in the Earth System Modeling Framework (ESMF). The SCHISM ESMF cap integrates with MOSSCO.","title":"ESMF - MOSSCO"},{"location":"index.html#obtaining-and-building-mossco","text":"export SCHISM_BUILD_DIR=/my/path/to/schism/build export SCHISM_ESMF_DIR=/my/path/to/schism-esmf export MOSSCO_DIR=/my/path/to/mossco git clone https://git.code.sf.net/p/mossco/code $MOSSCO_DIR cd $MOSSCO_DIR make all install bash ./build.sh -component \"SCHISM\"","title":"Obtaining and building MOSSCO"},{"location":"index.html#using-schism-as-part-of-a-mossco-coupled-system","text":"A simple preconfigured application is available in $MOSSCO_DIR/examples/esmf/schism . To build it, run make in that directory. You can use the resulting executable as a drop-in replacement for SCHISM's standalone pschism executable, but you need to add the mossco.cfg resource file which overrides param.nml for control parameters of the coupled system, like start and stop time.","title":"Using SCHISM as part of a MOSSCO coupled system"},{"location":"index.html#esmf-pre-configured-executables","text":"While the API exposed through the SCHISM-ESMF library is the core functionality of the cap, there are also several pre-configured simple coupled systems available for you to make or use as a template: concurrent_esmf_test.F90 multi_schism.F90 schism_driver_interfaces.F90 schism_pdaf.F90 triple_schism.F90","title":"ESMF - Pre-configured executables"},{"location":"index.html#applications","text":"(1) The SCHISM ESMF cap is used to couple SCHISM to the Parallel Data Assimilation Framework leveraging the control structures of ESMF, see schism_pdaf.F90 . (2) The SCHISM ESMF cap is used in the Modular System for Shelves and Coasts, see MOSSCO . Within that system, SCHISM can be flexibly coupled to components for the atmosphere, waves, ocean BGC, generic input/output, sediment.","title":"Applications"},{"location":"index.html#publications","text":"Hao-Cheng Yu, Yinglong J. Zhang, Nerger Lars, Carsten Lemmen, Jason C.S Yu, Tzu-Yin Chou, Chi-Hao Chu, and Chuen-Teyr Terng: Development of a flexible data assimilation method in a 3D unstructured-grid ocean model under Earth System Modeling Framework, submitted to Geoscientific Model Development, March 2022","title":"Publications"},{"location":"installation.html","text":"Installation Earth System Modeling Framework (ESMF) and National Unified Operational Prediction Capability (NUOPC) caps for SCHISM Prerequisites A development system including a Fortran and a C++ compiler, GNU make (>= 3.82) and CMake, and an installation of a message passing (MPI) implementation and the NetCDF library consistent with your Fortran/C++ toolchain. Earth System Modeling Framework (ESMF): You need to have ESMF installed and an environment variable ESMFMKFILE defined (via setenv or export ) that points to your ESMF installation. For some system, you'd also need to amend the search path for libraries LD_LIBRARY_PATH to include the ESMF library directory. for example by issuing {csh} setenv ESMFMKFILE /my/path/to/esmf/lib/libO/Linux.intel.64.openmpi.default/esmf.mk setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:/my/path/to/esmf/lib/libO/Linux.intel.64.openmpi.default/ SCHISM: You need to have SCHISM built with cmake and an environment variable SCHISM_BUILD_DIR defined that points to your SCHISM build directory containing lib/libhydro.a , e.g. setenv SCHISM_BUILD_DIR /my/path/to/schism/build Optionally, you can have PDAF: ``` setenv PDAF_LIB_DIR /my/path/to/pdaf/lib ```` Compilation (in schism-esmf) bash make install-nuopc install-esmf This will produce (1) the libesmf_schism.a libschism_nuopc.a library, which can be linked in other ESMF applications that want to include SCHISM as a component. This is the primary application. Bugs and wishes Please report bugs and any other issues or wishes on GitHub's issue tracker https://github.com/schism-dev/schism-esmf/issues (preferred) or by email to carsten.lemmen@hereon.de . Contributing You are very welcome to contribute to improving this cap. Fork on github, make changes, and file a pull request. As the primary license of SCHISM-ESMF is Apache 2.0, you're bound by its section 5 stating that your contribution also falls under Apache 2.0.","title":"Installation"},{"location":"installation.html#installation","text":"Earth System Modeling Framework (ESMF) and National Unified Operational Prediction Capability (NUOPC) caps for SCHISM","title":"Installation"},{"location":"installation.html#prerequisites","text":"A development system including a Fortran and a C++ compiler, GNU make (>= 3.82) and CMake, and an installation of a message passing (MPI) implementation and the NetCDF library consistent with your Fortran/C++ toolchain. Earth System Modeling Framework (ESMF): You need to have ESMF installed and an environment variable ESMFMKFILE defined (via setenv or export ) that points to your ESMF installation. For some system, you'd also need to amend the search path for libraries LD_LIBRARY_PATH to include the ESMF library directory. for example by issuing {csh} setenv ESMFMKFILE /my/path/to/esmf/lib/libO/Linux.intel.64.openmpi.default/esmf.mk setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:/my/path/to/esmf/lib/libO/Linux.intel.64.openmpi.default/ SCHISM: You need to have SCHISM built with cmake and an environment variable SCHISM_BUILD_DIR defined that points to your SCHISM build directory containing lib/libhydro.a , e.g. setenv SCHISM_BUILD_DIR /my/path/to/schism/build Optionally, you can have PDAF: ``` setenv PDAF_LIB_DIR /my/path/to/pdaf/lib ````","title":"Prerequisites"},{"location":"installation.html#compilation-in-schism-esmf","text":"bash make install-nuopc install-esmf This will produce (1) the libesmf_schism.a libschism_nuopc.a library, which can be linked in other ESMF applications that want to include SCHISM as a component. This is the primary application.","title":"Compilation (in schism-esmf)"},{"location":"installation.html#bugs-and-wishes","text":"Please report bugs and any other issues or wishes on GitHub's issue tracker https://github.com/schism-dev/schism-esmf/issues (preferred) or by email to carsten.lemmen@hereon.de .","title":"Bugs and wishes"},{"location":"installation.html#contributing","text":"You are very welcome to contribute to improving this cap. Fork on github, make changes, and file a pull request. As the primary license of SCHISM-ESMF is Apache 2.0, you're bound by its section 5 stating that your contribution also falls under Apache 2.0.","title":"Contributing"},{"location":"legal.html","text":"The SCHISM-ESMF cap is free and open source. You are welcome to use it in any way you like, you are encouraged to modify it and adapt it to your own purposes, and you are free to pass it on, within the bounds ofthe license terms set out below. License The majority of codes of the SCHISM-ESMF cap are released under the Apache version 2.0 license Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. Those parts which were derived from third-party software under the terms of the GNU Public License, continue to be released under the GPL. This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see https://www.gnu.org/licenses/ . Copyright The majority of codes of the SCHISM-ESMF cap are copyrighted by Helmholtz-Zentrum hereon GmbH (Hereon) and Virginia Institute of Marine Science (VIMS). Any other contribution retains the copyright of the respective contributor. Contributing According to section 5 of SCHISM's Apache License, your contribution is accepted under the terms of the Apache 2.0 License, unless agreed otherwise. If you modify codes that are under the therms of the GNU Public license, your contribution is accepted under those terms. By submitting your contribution, you acknowledge that you have the legal right to contribute your work to SCHISM-ESMF, and you hereby irrevocably grant to Hereon and VIMS a perpetual license to use, redistribute, and re-license your contribution under any open source license endorsed by the Open Software Initiative.","title":"Legal"},{"location":"legal.html#license","text":"The majority of codes of the SCHISM-ESMF cap are released under the Apache version 2.0 license Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. Those parts which were derived from third-party software under the terms of the GNU Public License, continue to be released under the GPL. This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","title":"License"},{"location":"legal.html#copyright","text":"The majority of codes of the SCHISM-ESMF cap are copyrighted by Helmholtz-Zentrum hereon GmbH (Hereon) and Virginia Institute of Marine Science (VIMS). Any other contribution retains the copyright of the respective contributor.","title":"Copyright"},{"location":"legal.html#contributing","text":"According to section 5 of SCHISM's Apache License, your contribution is accepted under the terms of the Apache 2.0 License, unless agreed otherwise. If you modify codes that are under the therms of the GNU Public license, your contribution is accepted under those terms. By submitting your contribution, you acknowledge that you have the legal right to contribute your work to SCHISM-ESMF, and you hereby irrevocably grant to Hereon and VIMS a perpetual license to use, redistribute, and re-license your contribution under any open source license endorsed by the Open Software Initiative.","title":"Contributing"}]}